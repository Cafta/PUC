# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L97p07ZUTCkdiQ3XBCHvt1q_TJD_qfGh

# Laboratório de IA e Automação

## Laboratórios 02

*André Kimaid* RA:21004050

*Carlos Amaral* RA:21986609

*Guilherme Talman* RA:21010098

*Murilo Trevisan* RA:21986260

## Exercício 1:
Escreva uma função Python que recebe uma lista de números inteiros por arâmetro e retorna a soma dos valores da lista.
"""

def somaLista(lista): # Criação da função
  soma = 0            # Cria o int que será usado para somar
  for elemento in lista:      # iteração para cada elemento da lista
    soma = soma + elemento
  return soma    # retorna a soma

# Execução da funcionalidade
## Criação das listas
a = [1, 3, 6]
b = []
c = [4, -2, 6]
## Printa na tela a resolução do problema de forma organizada.
print('Soma das listas:')
print('L1: ', somaLista(a), ';\nL2: ', somaLista(b), ';\nL3: ', somaLista(c), '.')

"""## Exercício 2:
Escreva uma função Python que receba duas listas de números inteiros e retorne **True** se elas tiverem pelo menos um elemento em comum, caso contrário **False**.
"""

def conj_list(first,second):   # Criação da função de comparação
  for item1 in first:          # para cada item da lista 'first'
    for item2 in second:       # percorre a lista 'second'
      if item1 == item2:       # compara os itens
        return True
  return False

# Criação das listas exemplos:
lista1 = [1,2,3,4,5]
lista2 = [6,7,8,9,10]
lista3 = [3,5,7,8,9]
lista4 = [5,1,2,2,3]

print(conj_list(lista1,lista2)) # faz a primeira comparação teste entre a lista 1 e a 2

print(conj_list(lista3,lista2))    # teste de comparação da lista 3 com a 2

"""## Exercício 3:
Escreva uma função Python que recebe uma lista de caracteres por parâmetro. A
função retorna a quantidade de vogais da lista. A lista de caractere é recebida via
teclado.
"""

def count_character_vowell(lista):   # Define a função de análise do testo
  vowell = 'aeiouAEIOU'              # cria uma string com todas as vogais
  conta = 0      # int de contagem
  for vogal in vowell:      # Para cada uma das vogais na string criada
    for teste in lista:     # Percorre cada uma das letras da lista recebida
      if teste == vogal:    # compara as duas
        conta = conta + 1   # incrementa 'conta' caso tenha "achado a vogal"
  return conta   # retorna

print(count_character_vowell('Guilherme nao sabe contar'))   # Faz a testagem

"""## Exercício 4:
Escreva uma função Python que recebe uma lista de caracteres por parâmetro. A
função retorna um dicionário que contém a quantidade de cada elemento da lista. A lista de caractere é recebida via teclado.
"""

def char_counter(word):  # Criando uma função chamada char_counter, que recebe o parâmetro word
  dictionary = {}        # cria o dicionario
  for char in word:             # faz uma iteração a cada letra da variável word
    if char in dictionary:      # verifica se essa letra já foi incluida no dicionário
      dictionary[char] += 1     # se sim, acrescenta 1 na contagem desta letra
    else:
      dictionary[char] = 1      # se não, registra ela no dicionário iniciando sua contagem
  return dictionary     # retorna o dicionario montado para o solicitante

theWord = list(input('Escreva uma palavra: '))   # Solicita ao usuário uma palavra
print(char_counter(theWord))     # Imprime na tela o dicionário

theWord = input('Escreva uma palavra: ')
print(char_counter(theWord))